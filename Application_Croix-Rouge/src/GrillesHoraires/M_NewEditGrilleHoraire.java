/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GrillesHoraires;

import Containers.CelluleGrille;
import Containers.Grille;
import Containers.Key;
import GUI.Panels.Main;
import Helpers.SwingUtils;
import Network.NetworkClient;
import PacketCom.PacketCom;
import States.States;
import Util.TableRender;
import Wizard.Wizard_Nouveau;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Greenlamp
 */
public class M_NewEditGrilleHoraire extends javax.swing.JPanel {

    /**
     * Creates new form M_NewEditGrilleHoraire
     */
    Main parent = null;
    NetworkClient socket = null;
    int row, column;
    Grille grille = null;
    Grille grilleOld = null;
    boolean dataSetted = false;
    String type = null;

    public M_NewEditGrilleHoraire(Main parent, NetworkClient socket, String titre) {
        initComponents();
        Gtitre.setText(titre);
        this.socket = socket;
        this.parent = parent;

        type = parent.getTypeGrille();
        if(type.equals("new")){
            cacher(false);
        }else{
            cacher(true);
        }
        grille = parent.getGrille();
        grilleOld = parent.getGrilleOld();
        if(grille != null){
            if(grilleOld == null){
                grilleOld = new Grille(grille);
                parent.setGrilleOld(grilleOld);
            }
            refreshTableau();
        }else{
            InitCellules();
        }

        for(int i=0; i<18; i++){
            Ggrille.setRowHeight(i, 30);
        }
        Ggrille.setDefaultRenderer(Object.class, new TableRender());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Gtitre = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ggrille = new javax.swing.JTable();
        Lambulance = new javax.swing.JLabel();
        Gambulance = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Gsemaine = new javax.swing.JTextField();
        Llieu = new javax.swing.JLabel();
        Glieu = new javax.swing.JTextField();
        Lheure = new javax.swing.JLabel();
        Gheure = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        Bmodifier = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Gannee = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Gnum = new javax.swing.JLabel();
        Gdate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Benregistrer = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        Gtitre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Gtitre.setText("Titre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Gtitre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Gtitre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        Ggrille.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Ggrille.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GgrilleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Ggrille);

        Lambulance.setText("Ambulance");

        Gambulance.setText("1er DEPART 112");

        jLabel2.setText("Semaine:");

        Gsemaine.setText("22");

        Llieu.setText("Lieu");

        Glieu.setText("LIEGE 2 - 832-BDG");

        Lheure.setText("Heure");

        jButton2.setText("valider");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Bmodifier.setText("modifier");
        Bmodifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmodifierActionPerformed(evt);
            }
        });

        jLabel3.setText("année:");

        Gannee.setText("2013");

        jLabel4.setText("Connaître numéro de semaine avec une date:");

        jLabel7.setText("Numéro de semaine:");

        Gnum.setText("0");

        Gdate.setText("09/05/2013");

        jButton1.setText("Calculer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Gnum)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Gdate)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Gdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Gnum)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        Benregistrer.setText("Enregistrer");
        Benregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BenregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Lambulance)
                            .addComponent(Llieu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Gambulance)
                            .addComponent(Glieu, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Lheure)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Gheure))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Gsemaine, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Gannee, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Bmodifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Benregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lambulance)
                            .addComponent(Gambulance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(Gsemaine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jLabel3)
                            .addComponent(Gannee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Llieu)
                            .addComponent(Glieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lheure)
                            .addComponent(Gheure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bmodifier)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Benregistrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void GgrilleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GgrilleMouseClicked
        if(evt.getButton() == MouseEvent.BUTTON3){
            int x = evt.getX();
            int y = evt.getY();

            int row = Ggrille.rowAtPoint(new Point(x, y));
            int column = Ggrille.columnAtPoint(new Point(x, y));
            if(column > 0){
                if(row > 2){
                    if(row != 2 && row != 6 && row != 10 && row != 14){
                        Ggrille.setValueAt("", row, column);
                        Memorise();
                    }
                }
            }
        }
        if(evt.getClickCount() == 2){
            int row = Ggrille.getSelectedRow();
            int column = Ggrille.getSelectedColumn();
            String role = (String)Ggrille.getValueAt(row, 0);
            int numeroColonneHeure = 0;
            if(row >= 3 && row <= 5){
                numeroColonneHeure = 2;
            }else if(row >= 7 && row <= 9){
                numeroColonneHeure = 6;
            }else if(row >= 11 && row <= 13){
                numeroColonneHeure = 10;
            }else if(row >= 15 && row <= 17){
                numeroColonneHeure = 14;
            }
            String heure = (String)Ggrille.getValueAt(numeroColonneHeure, column);
            String jour = (String)Ggrille.getValueAt(1, column);
            parent.setCelluleRow(row);
            parent.setCelluleColumn(column);
            parent.setGrille(grille);
            parent.changeState(Main.SEARCH_CRIT);
        }else{
            int row = Ggrille.getSelectedRow();
            int column = Ggrille.getSelectedColumn();
            if((row == 2 || row == 6 || row == 10 || row == 14) && column > 0){
                Gheure.setText((String)Ggrille.getValueAt(row, column));
                this.row = row;
                this.column = column;
            }
        }
    }//GEN-LAST:event_GgrilleMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int annee = Integer.parseInt(Gannee.getText());
        int numeroSemaine = Integer.parseInt(Gsemaine.getText());

        GregorianCalendar gc = new GregorianCalendar();
        gc.set(GregorianCalendar.YEAR, annee);
        gc.set(GregorianCalendar.WEEK_OF_YEAR, numeroSemaine);
        String dateDebut = new SimpleDateFormat("dd/MM/yyyy").format(gc.getTime());

        try {
            Date date = new SimpleDateFormat("dd/MM/yyyy").parse(dateDebut);
            for(int i=0; i<7; i++){
                Ggrille.setValueAt(new SimpleDateFormat("dd/MM/yyyy").format(gc.getTime()), 0, i+1);
                gc.add(GregorianCalendar.HOUR, 24);
            }
            dataSetted = true;
        } catch (ParseException ex) {
            Logger.getLogger(M_NewEditGrilleHoraire.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(dataSetted){
            Memorise();
            cacher(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BmodifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmodifierActionPerformed
        Ggrille.setValueAt(Gheure.getText(), this.row, this.column);
        Memorise();
    }//GEN-LAST:event_BmodifierActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String dateString = Gdate.getText();
        Date date = null;
        try{
            date = new SimpleDateFormat("dd/MM/yyyy").parse(dateString);
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(date);
            int numWeek = gc.get(GregorianCalendar.WEEK_OF_YEAR);
            Gnum.setText(String.valueOf(numWeek));
        } catch (ParseException ex) {
            Logger.getLogger(M_NewEditGrilleHoraire.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void BenregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BenregistrerActionPerformed
        PacketCom packet = null;
        if(type.equals("new")){
            packet = new PacketCom(States.NEW_GRILLE_HORAIRE, (Object)grille);
        }else{
            Object[] data = {grilleOld, grille};
            packet = new PacketCom(States.EDIT_GRILLE_HORAIRE, (Object)data);
        }
        socket.send(packet);
        boolean cont = false;
        try {
            PacketCom packetReponse = socket.receive();
            String type = packetReponse.getType();
            if(type.equals(States.NEW_GRILLE_HORAIRE_OUI)){
                parent.afficherMessage("Ajout nouvelle Grille horaire réussi.");
                cont = true;
            }else if(type.equals(States.NEW_GRILLE_HORAIRE_NON)){
                String message = (String) packetReponse.getObjet();
                parent.afficherMessage(message);
            }else if(type.equals(States.EDIT_GRILLE_HORAIRE_OUI)){
                parent.afficherMessage("Edition Grille horaire réussi.");
                cont = true;
            }else if(type.equals(States.EDIT_GRILLE_HORAIRE_NON)){
                String message = (String) packetReponse.getObjet();
                parent.afficherMessage(message);
            }
        } catch (Exception ex) {
            Logger.getLogger(M_NewEditGrilleHoraire.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(cont){
            parent.changeState(Main.GESTION_GRILLES_HORAIRES);
        }
    }//GEN-LAST:event_BenregistrerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Benregistrer;
    private javax.swing.JButton Bmodifier;
    private javax.swing.JTextField Gambulance;
    private javax.swing.JTextField Gannee;
    private javax.swing.JTextField Gdate;
    private javax.swing.JTable Ggrille;
    private javax.swing.JTextField Gheure;
    private javax.swing.JTextField Glieu;
    private javax.swing.JLabel Gnum;
    private javax.swing.JTextField Gsemaine;
    private javax.swing.JLabel Gtitre;
    private javax.swing.JLabel Lambulance;
    private javax.swing.JLabel Lheure;
    private javax.swing.JLabel Llieu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void InitCellules() {
        Vector vector = new Vector();
        Object[] data = {"", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"", "LUNDI", "MARDI", "MERCREDI", "JEUDI", "VENDREDI", "SAMEDI", "DIMANCHE"};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Prestation de", "06h30 - 14h30", "06h30 - 14h30", "06h30 - 14h30", "06h30 - 14h30", "06h30 - 14h30", "08h00 - 13h00", "08h00 - 13h00"};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Chauffeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Convoyeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Stagiaire", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Prestation de", "14h30 - 17h30", "14h30 - 17h30", "14h30 - 17h30", "14h30 - 17h30", "14h30 - 17h30", "13h00 - 18h00", "13h00 - 18h00"};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Chauffeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Convoyeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Stagiaire", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Prestation de", "17h30 - 22h30", "17h30 - 22h30", "17h30 - 22h30", "17h30 - 22h30", "17h30 - 22h30", "18h00 - 23h00", "18h00 - 23h00"};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Chauffeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Convoyeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Stagiaire", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Prestation de", "22h30 - 08h00", "22h30 - 06h30", "22h30 - 06h30", "22h30 - 06h30", "22h30 - 08h00", "23h00 - 08h00", "23h00 - 06h30"};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Chauffeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Convoyeur", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);

        vector = new Vector();
        data = new Object[]{"Stagiaire", "", "", "", "", "", "", ""};
        for(Object elm : data){
            vector.add(elm);
        }
        SwingUtils.addToTable(Ggrille, vector);
    }

    private void refreshTableau() {
        Gambulance.setText(grille.getNomAmbulance());
        Glieu.setText(grille.getLieu());
        Gsemaine.setText(String.valueOf(grille.getSemaine()));
        Gannee.setText(String.valueOf(grille.getAnnee()));

        InitCellules();

        for(Key key : grille.getGrilles()){
            CelluleGrille cellule = key.getValue();
            int column = cellule.getColumn();
            int row = cellule.getRow();
            String date = cellule.getDate();
            String jour = cellule.getJour();
            String heure = cellule.getHeure();
            String role = cellule.getRole();
            String nomVolontaire = cellule.getNomPrenom();

            Ggrille.setValueAt(date, 0, column);
            Ggrille.setValueAt(jour, 1, column);
            Ggrille.setValueAt(heure, 2, column);
            Ggrille.setValueAt(role, row, 0);
            Ggrille.setValueAt(nomVolontaire, row, column);
            if(nomVolontaire != null && !nomVolontaire.isEmpty()){
                
            }
        }
    }

    private void Memorise() {
        grille = new Grille();
        grille.setDateDebut((String)Ggrille.getValueAt(0, 1));
        grille.setDateFin((String)Ggrille.getValueAt(0, 7));
        grille.setSemaine(Integer.parseInt(Gsemaine.getText()));
        grille.setAnnee(Integer.parseInt(Gannee.getText()));
        grille.setNomAmbulance(Gambulance.getText());
        grille.setLieu(Glieu.getText());

        for(int k=3; k<6; k++){
            for(int i=1; i<8; i++){
                String date = (String)Ggrille.getValueAt(0, i);
                String jour = (String)Ggrille.getValueAt(1, i);
                String heure = (String)Ggrille.getValueAt(2, i);
                String role = (String)Ggrille.getValueAt(k, 0);
                String nomVolontaire = (String)Ggrille.getValueAt(k, i);
                CelluleGrille cellule = new CelluleGrille();
                cellule.setJour(jour);
                cellule.setHeure(heure);
                cellule.setDate(date);
                cellule.setRole(role);
                cellule.setNomPrenom(nomVolontaire);
                cellule.setRow(k);
                cellule.setColumn(i);
                grille.addCellule(k, i, cellule);
            }
        }
    }

    private void cacher(boolean value) {
        Ggrille.setVisible(value);
        Lambulance.setVisible(value);
        Gambulance.setVisible(value);
        Llieu.setVisible(value);
        Glieu.setVisible(value);
        Lheure.setVisible(value);
        Gheure.setVisible(value);
        Bmodifier.setVisible(value);
        Benregistrer.setVisible(value);
    }
}
