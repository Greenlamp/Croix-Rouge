/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package NouveauVolontaire2;

import Containers.Formation;
import Containers.Formations;
import Containers.Volontaire;
import EasyDate.EasyDate;
import GUI.Panels.Main;
import Network.NetworkClient;
import PacketCom.PacketCom;
import States.States;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;

/**
 *
 * @author Greenlamp
 */
public class M_Formations extends javax.swing.JPanel {

    /**
     * Creates new form M_Formations
     */
    Main parent = null;
    NetworkClient socket = null;
    Volontaire volontaire = null;
    String matricule = null;
    boolean edited = false;

    byte[] photocopieTMS = null;
    byte[] photocopieI = null;
    byte[] photocopieAMU = null;
    byte[] photocopieSISU = null;
    byte[] photocopieM = null;

    public M_Formations(Main parent, NetworkClient socket) {
        initComponents();
        this.socket = socket;
        this.parent = parent;
        ComboBoxAnnee();
        matricule = parent.getMatricule();
        if(matricule != null){
            edited = true;
            Gtitre.setText("Modifier un volontaire");
        }else{
            edited = false;
        }
        volontaire = parent.getVolontaire();
        if(volontaire != null){
            if(volontaire.getFormations() != null){
                this.completerChampFormation();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Gtitre = new javax.swing.JLabel();
        Baccueil1 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        GBEPS = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        GjourObtenuBEPS = new javax.swing.JComboBox();
        GmoisObtenuBEPS = new javax.swing.JComboBox();
        GanneeObtenuBEPS = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        GnumeroBEPS = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        GjourValableBEPS = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        GmoisValableBEPS = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        GanneeValableBEPS = new javax.swing.JComboBox();
        GpermanentBEPS = new javax.swing.JCheckBox();
        jPanel14 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        GBDS = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        GjourObtenuBDS = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        GmoisObtenuBDS = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        GanneeObtenuBDS = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        GjourExamenBDS = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        GmoisExamenBDS = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        GanneeExamenBDS = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        GlieuBDS = new javax.swing.JTextField();
        GanneeValableBDS = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        GmoisValableBDS = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        GjourValableBDS = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        GpermanentBDS = new javax.swing.JCheckBox();
        jPanel15 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        GTMS = new javax.swing.JCheckBox();
        jLabel31 = new javax.swing.JLabel();
        GjourObtenuTMS = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        GmoisObtenuTMS = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        GanneeObtenuTMS = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        GnumeroTMS = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        BparcourirTMS = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        GjourValableTMS = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        GmoisValableTMS = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        GanneeValableTMS = new javax.swing.JComboBox();
        GpermanentTMS = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        GI = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        GjourObtenuI = new javax.swing.JComboBox();
        jLabel38 = new javax.swing.JLabel();
        GmoisObtenuI = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        GanneeObtenuI = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        GnumSantePubliqueI = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        BparcourirB5 = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        GjourValableI = new javax.swing.JComboBox();
        jLabel54 = new javax.swing.JLabel();
        GmoisValableI = new javax.swing.JComboBox();
        jLabel48 = new javax.swing.JLabel();
        GanneeValableI = new javax.swing.JComboBox();
        GpermanentI = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        GAMU = new javax.swing.JCheckBox();
        GjourObtenuAMU = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        GanneeObtenuAMU = new javax.swing.JComboBox();
        GmoisObtenuAMU = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        GbadgeNumAMU = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        GnumServiceAMU = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        BparcourirB3 = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        GjourValableAMU = new javax.swing.JComboBox();
        jLabel61 = new javax.swing.JLabel();
        GmoisValableAMU = new javax.swing.JComboBox();
        jLabel60 = new javax.swing.JLabel();
        GanneeValableAMU = new javax.swing.JComboBox();
        GpermanentAMU = new javax.swing.JCheckBox();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        GSISU = new javax.swing.JCheckBox();
        jLabel43 = new javax.swing.JLabel();
        GjourObtenuSISU = new javax.swing.JComboBox();
        jLabel44 = new javax.swing.JLabel();
        GmoisObtenuSISU = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        GanneeObtenuSISU = new javax.swing.JComboBox();
        jLabel46 = new javax.swing.JLabel();
        GnumBadgeSISU = new javax.swing.JTextField();
        BparcourirB6 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        GanneeValableSISU = new javax.swing.JComboBox();
        jLabel50 = new javax.swing.JLabel();
        GmoisValableSISU = new javax.swing.JComboBox();
        jLabel49 = new javax.swing.JLabel();
        GjourValableSISU = new javax.swing.JComboBox();
        GpermanentSISU = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        GM = new javax.swing.JCheckBox();
        jLabel51 = new javax.swing.JLabel();
        GjourObtenuM = new javax.swing.JComboBox();
        jLabel52 = new javax.swing.JLabel();
        GmoisObtenuM = new javax.swing.JComboBox();
        jLabel53 = new javax.swing.JLabel();
        GanneeObtenuM = new javax.swing.JComboBox();
        jLabel57 = new javax.swing.JLabel();
        GnumInamiM = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        BparcourirB7 = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        GjourValableM = new javax.swing.JComboBox();
        jLabel66 = new javax.swing.JLabel();
        GmoisValableM = new javax.swing.JComboBox();
        jLabel65 = new javax.swing.JLabel();
        GanneeValableM = new javax.swing.JComboBox();
        GpermanentM = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        GA1 = new javax.swing.JCheckBox();
        GpreA1 = new javax.swing.JTextField();
        jLabel93 = new javax.swing.JLabel();
        GjourObtenuA1 = new javax.swing.JComboBox();
        jLabel94 = new javax.swing.JLabel();
        GmoisObtenuA1 = new javax.swing.JComboBox();
        jLabel95 = new javax.swing.JLabel();
        GanneeObtenuA1 = new javax.swing.JComboBox();
        jLabel96 = new javax.swing.JLabel();
        GnumA1 = new javax.swing.JTextField();
        jLabel97 = new javax.swing.JLabel();
        GjourValableA1 = new javax.swing.JComboBox();
        jLabel98 = new javax.swing.JLabel();
        GmoisValableA1 = new javax.swing.JComboBox();
        jLabel99 = new javax.swing.JLabel();
        GanneeValableA1 = new javax.swing.JComboBox();
        GpermanentA1 = new javax.swing.JCheckBox();
        jPanel22 = new javax.swing.JPanel();
        GA3 = new javax.swing.JCheckBox();
        GpreA3 = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        GjourObtenuA3 = new javax.swing.JComboBox();
        jLabel119 = new javax.swing.JLabel();
        GmoisObtenuA3 = new javax.swing.JComboBox();
        jLabel120 = new javax.swing.JLabel();
        GanneeObtenuA3 = new javax.swing.JComboBox();
        jLabel121 = new javax.swing.JLabel();
        GnumA3 = new javax.swing.JTextField();
        jLabel122 = new javax.swing.JLabel();
        GjourValableA3 = new javax.swing.JComboBox();
        jLabel123 = new javax.swing.JLabel();
        GmoisValableA3 = new javax.swing.JComboBox();
        jLabel124 = new javax.swing.JLabel();
        GanneeValableA3 = new javax.swing.JComboBox();
        GpermanentA3 = new javax.swing.JCheckBox();
        jPanel23 = new javax.swing.JPanel();
        GA2 = new javax.swing.JCheckBox();
        GpreA2 = new javax.swing.JTextField();
        jLabel125 = new javax.swing.JLabel();
        GjourObtenuA2 = new javax.swing.JComboBox();
        jLabel126 = new javax.swing.JLabel();
        GmoisObtenuA2 = new javax.swing.JComboBox();
        jLabel127 = new javax.swing.JLabel();
        GanneeObtenuA2 = new javax.swing.JComboBox();
        jLabel128 = new javax.swing.JLabel();
        GnumA2 = new javax.swing.JTextField();
        jLabel129 = new javax.swing.JLabel();
        GjourValableA2 = new javax.swing.JComboBox();
        jLabel130 = new javax.swing.JLabel();
        GmoisValableA2 = new javax.swing.JComboBox();
        jLabel131 = new javax.swing.JLabel();
        GanneeValableA2 = new javax.swing.JComboBox();
        GpermanentA2 = new javax.swing.JCheckBox();

        jPanel2.setBackground(new java.awt.Color(255, 0, 0));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Vos formations");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        Gtitre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Gtitre.setText("Nouveau volontaire");

        Baccueil1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Baccueil1.setForeground(new java.awt.Color(0, 0, 255));
        Baccueil1.setText("ACCUEIL");
        Baccueil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Baccueil1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Baccueil1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Gtitre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Gtitre)
                    .addComponent(Baccueil1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(153, 153, 153));

        jLabel114.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel114.setText("Page: ");

        jLabel115.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel115.setText("8");

        jLabel116.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel116.setText("/");

        jLabel117.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel117.setText("9");

        jButton4.setText("Terminer");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Annuler");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Précédent");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Suivant");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel114)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel115)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel116)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel117)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel114)
                    .addComponent(jLabel115)
                    .addComponent(jLabel116)
                    .addComponent(jLabel117)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(153, 153, 153));

        GBEPS.setBackground(new java.awt.Color(153, 153, 153));
        GBEPS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GBEPS.setText("Brevet Européen de Premiers Secours");

        jLabel5.setText("Obtenu le");

        GjourObtenuBEPS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        GjourObtenuBEPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GjourObtenuBEPSActionPerformed(evt);
            }
        });

        GmoisObtenuBEPS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuBEPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuBEPSActionPerformed(evt);
            }
        });

        jLabel11.setText("/");

        jLabel8.setText("/");

        jLabel6.setText("Brevet n°");

        jLabel7.setText("Valable jusqu'au");

        GjourValableBEPS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        GjourValableBEPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GjourValableBEPSActionPerformed(evt);
            }
        });

        jLabel20.setText("/");

        GmoisValableBEPS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableBEPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableBEPSActionPerformed(evt);
            }
        });

        jLabel12.setText("/");

        GpermanentBEPS.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentBEPS.setText("Permanent");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GBEPS)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GjourObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GmoisObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GanneeObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GnumeroBEPS))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GjourValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GmoisValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GanneeValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GpermanentBEPS)))
                        .addGap(0, 884, Short.MAX_VALUE))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GBEPS)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GjourObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GmoisObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(GanneeObtenuBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(GnumeroBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GjourValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GmoisValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(GanneeValableBEPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(GpermanentBEPS))
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(356, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Brevet Européen de Premiers Secours", jPanel13);

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        GBDS.setBackground(new java.awt.Color(153, 153, 153));
        GBDS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GBDS.setText("Brevet de secourisme");

        jLabel10.setText("Obtenu le");

        GjourObtenuBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel13.setText("/");

        GmoisObtenuBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuBDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuBDSActionPerformed(evt);
            }
        });

        jLabel14.setText("/");

        jLabel18.setText("Date de l'examen");

        GjourExamenBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel17.setText("/");

        GmoisExamenBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisExamenBDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisExamenBDSActionPerformed(evt);
            }
        });

        jLabel16.setText("/");

        jLabel15.setText("Lieu d'examen");

        jLabel19.setText("/");

        GmoisValableBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableBDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableBDSActionPerformed(evt);
            }
        });

        jLabel9.setText("/");

        GjourValableBDS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel3.setText("Valable jusqu'au ");

        GpermanentBDS.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentBDS.setText("Permanent");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GBDS)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GlieuBDS))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GpermanentBDS)))
                .addContainerGap(881, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GBDS)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(GjourObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(GanneeObtenuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(GjourExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(GanneeExamenBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(GlieuBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(GjourValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(GanneeValableBDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(GpermanentBDS))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(318, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Brevet de secourisme", jPanel14);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        GTMS.setBackground(new java.awt.Color(153, 153, 153));
        GTMS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GTMS.setText("Ambulancier TMS");

        jLabel31.setText("Obtenu le");

        GjourObtenuTMS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel36.setText("/");

        GmoisObtenuTMS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuTMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuTMSActionPerformed(evt);
            }
        });

        jLabel32.setText("/");

        jLabel33.setText("Brevet n°");

        jLabel34.setText("photocopie");

        BparcourirTMS.setText("Parcourir");
        BparcourirTMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparcourirTMSActionPerformed(evt);
            }
        });

        jLabel42.setText("Valable jusqu'au ");

        GjourValableTMS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel35.setText("/");

        GmoisValableTMS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableTMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableTMSActionPerformed(evt);
            }
        });

        jLabel30.setText("/");

        GpermanentTMS.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentTMS.setText("Permanent");

        jButton1.setText("retirer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("aperçu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(GTMS)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BparcourirTMS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel33)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GnumeroTMS))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel42)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GjourValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel35)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GmoisValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel30)
                            .addGap(10, 10, 10)
                            .addComponent(GanneeValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(GpermanentTMS))))
                .addContainerGap(877, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GTMS)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(GjourObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(GanneeObtenuTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(GnumeroTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(BparcourirTMS)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(GjourValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GanneeValableTMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(GpermanentTMS)
                    .addComponent(jLabel30))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ambulancier TMS", jPanel15);

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        GI.setBackground(new java.awt.Color(153, 153, 153));
        GI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GI.setText("Infirmier");

        jLabel37.setText("Obtenu le");

        GjourObtenuI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel38.setText("/");

        GmoisObtenuI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuIActionPerformed(evt);
            }
        });

        jLabel39.setText("/");

        jLabel40.setText("N° santé publique");

        jLabel41.setText("photocopie");

        BparcourirB5.setText("Parcourir");
        BparcourirB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparcourirB5ActionPerformed(evt);
            }
        });

        jLabel56.setText("Valable jusqu'au ");

        GjourValableI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel54.setText("/");

        GmoisValableI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableIActionPerformed(evt);
            }
        });

        jLabel48.setText("/");

        GpermanentI.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentI.setText("Permanent");

        jButton3.setText("retirer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton8.setText("aperçu");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GI)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GnumSantePubliqueI))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BparcourirB5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourValableI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisValableI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeValableI, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GpermanentI)))
                .addContainerGap(877, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GI)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(GjourObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(GanneeObtenuI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(GnumSantePubliqueI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(BparcourirB5)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton8)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(GjourValableI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48)
                    .addComponent(GanneeValableI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54)
                    .addComponent(GpermanentI))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Infirmier", jPanel17);

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));

        GAMU.setBackground(new java.awt.Color(153, 153, 153));
        GAMU.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GAMU.setText("Ambulancier AMU ");

        GjourObtenuAMU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel26.setText("/");

        jLabel21.setText("Obtenu le");

        GmoisObtenuAMU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuAMU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuAMUActionPerformed(evt);
            }
        });

        jLabel25.setText("/");

        jLabel27.setText("Badge n°");

        jLabel28.setText("N° du service 112");

        jLabel29.setText("photocopie");

        BparcourirB3.setText("Parcourir");
        BparcourirB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparcourirB3ActionPerformed(evt);
            }
        });

        jLabel62.setText("Valable jusqu'au");

        GjourValableAMU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel61.setText("/");

        GmoisValableAMU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableAMU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableAMUActionPerformed(evt);
            }
        });

        jLabel60.setText("/");

        GpermanentAMU.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentAMU.setText("Permanent");

        jButton9.setText("retirer");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("aperçu");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GAMU)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GbadgeNumAMU))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GnumServiceAMU))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BparcourirB3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GpermanentAMU)))
                .addContainerGap(884, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GAMU)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(GjourObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(GanneeObtenuAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(GbadgeNumAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(GnumServiceAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(BparcourirB3)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton9)
                        .addComponent(jButton10)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(GjourValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60)
                    .addComponent(GanneeValableAMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61)
                    .addComponent(GpermanentAMU))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ambulancier AMU ", jPanel18);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        GSISU.setBackground(new java.awt.Color(153, 153, 153));
        GSISU.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GSISU.setText("Infirmier SISU ");

        jLabel43.setText("Obtenu le");

        GjourObtenuSISU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel44.setText("/");

        GmoisObtenuSISU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuSISU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuSISUActionPerformed(evt);
            }
        });

        jLabel45.setText("/");

        jLabel46.setText("N° du badge");

        BparcourirB6.setText("Parcourir");
        BparcourirB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparcourirB6ActionPerformed(evt);
            }
        });

        jLabel47.setText("photocopie");

        jLabel63.setText("Valable jusqu'au");

        jLabel50.setText("/");

        GmoisValableSISU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableSISU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableSISUActionPerformed(evt);
            }
        });

        jLabel49.setText("/");

        GjourValableSISU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        GpermanentSISU.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentSISU.setText("Permanent");

        jButton11.setText("retirer");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("aperçu");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GSISU)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GnumBadgeSISU))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BparcourirB6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GpermanentSISU)))
                .addContainerGap(880, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GSISU)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(GjourObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(GanneeObtenuSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(GnumBadgeSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(BparcourirB6)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton11)
                        .addComponent(jButton12)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GjourValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(GanneeValableSISU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(GpermanentSISU)
                    .addComponent(jLabel63))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Infirmier SISU ", jPanel19);

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));

        GM.setBackground(new java.awt.Color(153, 153, 153));
        GM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GM.setText("Médecin");

        jLabel51.setText("Obtenu le");

        GjourObtenuM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel52.setText("/");

        GmoisObtenuM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuMActionPerformed(evt);
            }
        });

        jLabel53.setText("/");

        jLabel57.setText("N° Inami");

        jLabel55.setText("photocopie");

        BparcourirB7.setText("Parcourir");
        BparcourirB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparcourirB7ActionPerformed(evt);
            }
        });

        jLabel67.setText("Valable jusqu'au ");

        GjourValableM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel66.setText("/");

        GmoisValableM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableMActionPerformed(evt);
            }
        });

        jLabel65.setText("/");

        GpermanentM.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentM.setText("Permanent");

        jButton13.setText("retirer");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("aperçu");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GM)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GnumInamiM))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BparcourirB7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourValableM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisValableM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeValableM, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GpermanentM)))
                .addContainerGap(901, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GM)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(GjourObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53)
                    .addComponent(GanneeObtenuM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel52))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(GnumInamiM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(BparcourirB7)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton13)
                        .addComponent(jButton14)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(GjourValableM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65)
                    .addComponent(GanneeValableM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66)
                    .addComponent(GpermanentM))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Médecin", jPanel20);

        jPanel9.setBackground(new java.awt.Color(153, 153, 153));

        GA1.setBackground(new java.awt.Color(153, 153, 153));
        GA1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GA1.setText("Autre, précisez");

        jLabel93.setText("Obtenu le");

        GjourObtenuA1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel94.setText("/");

        GmoisObtenuA1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuA1ActionPerformed(evt);
            }
        });

        jLabel95.setText("/");

        jLabel96.setText("Certification n°");

        jLabel97.setText("Valable jusqu'au ");

        GjourValableA1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel98.setText("/");

        GmoisValableA1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableA1ActionPerformed(evt);
            }
        });

        jLabel99.setText("/");

        GpermanentA1.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentA1.setText("Permanent");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel93)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel94)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel95)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GpreA1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                    .addComponent(jLabel97)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GjourValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel98)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GmoisValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel99)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(GanneeValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GpermanentA1))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                    .addComponent(jLabel96)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GnumA1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(GA1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 26, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GpreA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GA1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GjourObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel95)
                    .addComponent(GanneeObtenuA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel93)
                    .addComponent(jLabel94))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel96)
                    .addComponent(GnumA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel97)
                    .addComponent(GjourValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel99)
                    .addComponent(GanneeValableA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel98)
                    .addComponent(GpermanentA1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel22.setBackground(new java.awt.Color(153, 153, 153));

        GA3.setBackground(new java.awt.Color(153, 153, 153));
        GA3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GA3.setText("Autre, précisez");

        jLabel118.setText("Obtenu le");

        GjourObtenuA3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel119.setText("/");

        GmoisObtenuA3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuA3ActionPerformed(evt);
            }
        });

        jLabel120.setText("/");

        jLabel121.setText("Certification n°");

        jLabel122.setText("Valable jusqu'au ");

        GjourValableA3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel123.setText("/");

        GmoisValableA3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableA3ActionPerformed(evt);
            }
        });

        jLabel124.setText("/");

        GpermanentA3.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentA3.setText("Permanent");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel118)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel119)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel120)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GpreA3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel22Layout.createSequentialGroup()
                                    .addComponent(jLabel122)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GjourValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel123)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GmoisValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel124)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(GanneeValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GpermanentA3))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel22Layout.createSequentialGroup()
                                    .addComponent(jLabel121)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GnumA3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(GA3, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 26, Short.MAX_VALUE))))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GpreA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GA3))
                .addGap(18, 18, 18)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GjourObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel120)
                    .addComponent(GanneeObtenuA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel118)
                    .addComponent(jLabel119))
                .addGap(18, 18, 18)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel121)
                    .addComponent(GnumA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel122)
                    .addComponent(GjourValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel124)
                    .addComponent(GanneeValableA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel123)
                    .addComponent(GpermanentA3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBackground(new java.awt.Color(153, 153, 153));

        GA2.setBackground(new java.awt.Color(153, 153, 153));
        GA2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        GA2.setText("Autre, précisez");

        jLabel125.setText("Obtenu le");

        GjourObtenuA2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel126.setText("/");

        GmoisObtenuA2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisObtenuA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisObtenuA2ActionPerformed(evt);
            }
        });

        jLabel127.setText("/");

        jLabel128.setText("Certification n°");

        jLabel129.setText("Valable jusqu'au ");

        GjourValableA2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel130.setText("/");

        GmoisValableA2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        GmoisValableA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GmoisValableA2ActionPerformed(evt);
            }
        });

        jLabel131.setText("/");

        GpermanentA2.setBackground(new java.awt.Color(153, 153, 153));
        GpermanentA2.setText("Permanent");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel125)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GjourObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel126)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GmoisObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel127)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GanneeObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GpreA2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel23Layout.createSequentialGroup()
                                    .addComponent(jLabel129)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GjourValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel130)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GmoisValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel131)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(GanneeValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GpermanentA2))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel23Layout.createSequentialGroup()
                                    .addComponent(jLabel128)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GnumA2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(GA2, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 26, Short.MAX_VALUE))))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GpreA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GA2))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GjourObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel127)
                    .addComponent(GanneeObtenuA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel125)
                    .addComponent(jLabel126))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel128)
                    .addComponent(GnumA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel129)
                    .addComponent(GjourValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GmoisValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel131)
                    .addComponent(GanneeValableA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel130)
                    .addComponent(GpermanentA2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("autres", jPanel21);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BparcourirTMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparcourirTMSActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int retour = fileChooser.showOpenDialog(this);
        if(retour == JFileChooser.APPROVE_OPTION){
            File fichier = fileChooser.getSelectedFile();
            if(!checkFormat(fichier)){
                parent.afficherMessage("Format autorisé: jpg, jpeg, png, bmp");
                photocopieTMS = null;
            }else{
                photocopieTMS = FileToByte(fichier);
            }
        }
    }//GEN-LAST:event_BparcourirTMSActionPerformed

    private void BparcourirB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparcourirB5ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int retour = fileChooser.showOpenDialog(this);
        if(retour == JFileChooser.APPROVE_OPTION){
            File fichier = fileChooser.getSelectedFile();
            if(!checkFormat(fichier)){
                parent.afficherMessage("Format autorisé: jpg, jpeg, png, bmp");
                photocopieI = null;
            }else{
                photocopieI = FileToByte(fichier);
            }
        }
    }//GEN-LAST:event_BparcourirB5ActionPerformed

    private void BparcourirB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparcourirB3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int retour = fileChooser.showOpenDialog(this);
        if(retour == JFileChooser.APPROVE_OPTION){
            File fichier = fileChooser.getSelectedFile();
            if(!checkFormat(fichier)){
                parent.afficherMessage("Format autorisé: jpg, jpeg, png, bmp");
                photocopieAMU = null;
            }else{
                photocopieAMU = FileToByte(fichier);
            }
        }
    }//GEN-LAST:event_BparcourirB3ActionPerformed

    private void BparcourirB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparcourirB6ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int retour = fileChooser.showOpenDialog(this);
        if(retour == JFileChooser.APPROVE_OPTION){
            File fichier = fileChooser.getSelectedFile();
            if(!checkFormat(fichier)){
                parent.afficherMessage("Format autorisé: jpg, jpeg, png, bmp");
                photocopieSISU = null;
            }else{
                photocopieSISU = FileToByte(fichier);
            }
        }
    }//GEN-LAST:event_BparcourirB6ActionPerformed

    private void BparcourirB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparcourirB7ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int retour = fileChooser.showOpenDialog(this);
        if(retour == JFileChooser.APPROVE_OPTION){
            File fichier = fileChooser.getSelectedFile();
            if(!checkFormat(fichier)){
                parent.afficherMessage("Format autorisé: jpg, jpeg, png, bmp");
                photocopieM = null;
            }else{
                photocopieM = FileToByte(fichier);
            }
        }
    }//GEN-LAST:event_BparcourirB7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(checkChamps()){
            creerClasse();
            envoyerClasse();
            parent.cleanBackup();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(checkChamps()){
            creerClasse();
            parent.changeState(Main.NOUVEAU_VOLONTAIRE_PAGE_7);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(checkChamps()){
            creerClasse();
            parent.changeState(Main.NOUVEAU_VOLONTAIRE_PAGE_9);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        parent.changeState(Main.LOGGED);
        parent.cleanBackup();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void GmoisValableBEPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableBEPSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableBEPS.setSelectedIndex(0);
            GjourValableBEPS.setEnabled(false);
        }else{
            GjourValableBEPS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableBEPSActionPerformed

    private void GmoisObtenuBEPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuBEPSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuBEPS.setSelectedIndex(0);
            GjourObtenuBEPS.setEnabled(false);
        }else{
            GjourObtenuBEPS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuBEPSActionPerformed

    private void GmoisObtenuBDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuBDSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuBDS.setSelectedIndex(0);
            GjourObtenuBDS.setEnabled(false);
        }else{
            GjourObtenuBDS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuBDSActionPerformed

    private void GmoisExamenBDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisExamenBDSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourExamenBDS.setSelectedIndex(0);
            GjourExamenBDS.setEnabled(false);
        }else{
            GjourExamenBDS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisExamenBDSActionPerformed

    private void GmoisValableBDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableBDSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableBDS.setSelectedIndex(0);
            GjourValableBDS.setEnabled(false);
        }else{
            GjourValableBDS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableBDSActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        photocopieTMS = null;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Apercu_Photocopie apercu_Photocopie = new Apercu_Photocopie(parent, true, photocopieTMS);
        apercu_Photocopie.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void GmoisObtenuTMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuTMSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuTMS.setSelectedIndex(0);
            GjourObtenuTMS.setEnabled(false);
        }else{
            GjourObtenuTMS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuTMSActionPerformed

    private void GmoisValableTMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableTMSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableTMS.setSelectedIndex(0);
            GjourValableTMS.setEnabled(false);
        }else{
            GjourValableTMS.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableTMSActionPerformed

    private void Baccueil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Baccueil1ActionPerformed
        parent.changeState(Main.LOGGED);
    }//GEN-LAST:event_Baccueil1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        photocopieI = null;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Apercu_Photocopie apercu_Photocopie = new Apercu_Photocopie(parent, true, photocopieI);
        apercu_Photocopie.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        photocopieAMU = null;
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        Apercu_Photocopie apercu_Photocopie = new Apercu_Photocopie(parent, true, photocopieAMU);
        apercu_Photocopie.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        photocopieSISU = null;
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Apercu_Photocopie apercu_Photocopie = new Apercu_Photocopie(parent, true, photocopieSISU);
        apercu_Photocopie.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        photocopieM = null;
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Apercu_Photocopie apercu_Photocopie = new Apercu_Photocopie(parent, true, photocopieM);
        apercu_Photocopie.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void GmoisObtenuIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuIActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuI.setSelectedIndex(0);
            GjourObtenuI.setEnabled(false);
        }else{
            GjourObtenuI.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuIActionPerformed

    private void GmoisValableIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableIActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableI.setSelectedIndex(0);
            GjourValableI.setEnabled(false);
        }else{
            GjourValableI.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableIActionPerformed

    private void GmoisObtenuAMUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuAMUActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuAMU.setSelectedIndex(0);
            GjourObtenuAMU.setEnabled(false);
        }else{
            GjourObtenuAMU.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuAMUActionPerformed

    private void GmoisValableAMUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableAMUActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableAMU.setSelectedIndex(0);
            GjourValableAMU.setEnabled(false);
        }else{
            GjourValableAMU.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableAMUActionPerformed

    private void GmoisObtenuSISUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuSISUActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuSISU.setSelectedIndex(0);
            GjourObtenuSISU.setEnabled(false);
        }else{
            GjourObtenuSISU.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuSISUActionPerformed

    private void GmoisValableSISUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableSISUActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableSISU.setSelectedIndex(0);
            GjourValableSISU.setEnabled(false);
        }else{
            GjourValableSISU.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableSISUActionPerformed

    private void GmoisObtenuMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuMActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuM.setSelectedIndex(0);
            GjourObtenuM.setEnabled(false);
        }else{
            GjourObtenuM.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuMActionPerformed

    private void GmoisValableMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableMActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableM.setSelectedIndex(0);
            GjourValableM.setEnabled(false);
        }else{
            GjourValableM.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableMActionPerformed

    private void GmoisObtenuA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuA1ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuA1.setSelectedIndex(0);
            GjourObtenuA1.setEnabled(false);
        }else{
            GjourObtenuA1.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuA1ActionPerformed

    private void GmoisValableA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableA1ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableA1.setSelectedIndex(0);
            GjourValableA1.setEnabled(false);
        }else{
            GjourValableA1.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableA1ActionPerformed

    private void GmoisObtenuA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuA2ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuA2.setSelectedIndex(0);
            GjourObtenuA2.setEnabled(false);
        }else{
            GjourObtenuA2.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuA2ActionPerformed

    private void GmoisValableA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableA2ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableA2.setSelectedIndex(0);
            GjourValableA2.setEnabled(false);
        }else{
            GjourValableA2.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableA2ActionPerformed

    private void GmoisObtenuA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisObtenuA3ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourObtenuA3.setSelectedIndex(0);
            GjourObtenuA3.setEnabled(false);
        }else{
            GjourObtenuA3.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisObtenuA3ActionPerformed

    private void GmoisValableA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GmoisValableA3ActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(source.getSelectedItem().toString().equals("-")){
            GjourValableA3.setSelectedIndex(0);
            GjourValableA3.setEnabled(false);
        }else{
            GjourValableA3.setEnabled(true);
        }
    }//GEN-LAST:event_GmoisValableA3ActionPerformed

    private void GjourObtenuBEPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GjourObtenuBEPSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(!source.getSelectedItem().toString().equals("-")){
            GmoisObtenuBEPS.setSelectedIndex(1);
        }
    }//GEN-LAST:event_GjourObtenuBEPSActionPerformed

    private void GjourValableBEPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GjourValableBEPSActionPerformed
        JComboBox source = (JComboBox)evt.getSource();
        if(!source.getSelectedItem().toString().equals("-")){
            GmoisValableBEPS.setSelectedIndex(1);
        }
    }//GEN-LAST:event_GjourValableBEPSActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Baccueil1;
    private javax.swing.JButton BparcourirB3;
    private javax.swing.JButton BparcourirB5;
    private javax.swing.JButton BparcourirB6;
    private javax.swing.JButton BparcourirB7;
    private javax.swing.JButton BparcourirTMS;
    private javax.swing.JCheckBox GA1;
    private javax.swing.JCheckBox GA2;
    private javax.swing.JCheckBox GA3;
    private javax.swing.JCheckBox GAMU;
    private javax.swing.JCheckBox GBDS;
    private javax.swing.JCheckBox GBEPS;
    private javax.swing.JCheckBox GI;
    private javax.swing.JCheckBox GM;
    private javax.swing.JCheckBox GSISU;
    private javax.swing.JCheckBox GTMS;
    private javax.swing.JComboBox GanneeExamenBDS;
    private javax.swing.JComboBox GanneeObtenuA1;
    private javax.swing.JComboBox GanneeObtenuA2;
    private javax.swing.JComboBox GanneeObtenuA3;
    private javax.swing.JComboBox GanneeObtenuAMU;
    private javax.swing.JComboBox GanneeObtenuBDS;
    private javax.swing.JComboBox GanneeObtenuBEPS;
    private javax.swing.JComboBox GanneeObtenuI;
    private javax.swing.JComboBox GanneeObtenuM;
    private javax.swing.JComboBox GanneeObtenuSISU;
    private javax.swing.JComboBox GanneeObtenuTMS;
    private javax.swing.JComboBox GanneeValableA1;
    private javax.swing.JComboBox GanneeValableA2;
    private javax.swing.JComboBox GanneeValableA3;
    private javax.swing.JComboBox GanneeValableAMU;
    private javax.swing.JComboBox GanneeValableBDS;
    private javax.swing.JComboBox GanneeValableBEPS;
    private javax.swing.JComboBox GanneeValableI;
    private javax.swing.JComboBox GanneeValableM;
    private javax.swing.JComboBox GanneeValableSISU;
    private javax.swing.JComboBox GanneeValableTMS;
    private javax.swing.JTextField GbadgeNumAMU;
    private javax.swing.JComboBox GjourExamenBDS;
    private javax.swing.JComboBox GjourObtenuA1;
    private javax.swing.JComboBox GjourObtenuA2;
    private javax.swing.JComboBox GjourObtenuA3;
    private javax.swing.JComboBox GjourObtenuAMU;
    private javax.swing.JComboBox GjourObtenuBDS;
    private javax.swing.JComboBox GjourObtenuBEPS;
    private javax.swing.JComboBox GjourObtenuI;
    private javax.swing.JComboBox GjourObtenuM;
    private javax.swing.JComboBox GjourObtenuSISU;
    private javax.swing.JComboBox GjourObtenuTMS;
    private javax.swing.JComboBox GjourValableA1;
    private javax.swing.JComboBox GjourValableA2;
    private javax.swing.JComboBox GjourValableA3;
    private javax.swing.JComboBox GjourValableAMU;
    private javax.swing.JComboBox GjourValableBDS;
    private javax.swing.JComboBox GjourValableBEPS;
    private javax.swing.JComboBox GjourValableI;
    private javax.swing.JComboBox GjourValableM;
    private javax.swing.JComboBox GjourValableSISU;
    private javax.swing.JComboBox GjourValableTMS;
    private javax.swing.JTextField GlieuBDS;
    private javax.swing.JComboBox GmoisExamenBDS;
    private javax.swing.JComboBox GmoisObtenuA1;
    private javax.swing.JComboBox GmoisObtenuA2;
    private javax.swing.JComboBox GmoisObtenuA3;
    private javax.swing.JComboBox GmoisObtenuAMU;
    private javax.swing.JComboBox GmoisObtenuBDS;
    private javax.swing.JComboBox GmoisObtenuBEPS;
    private javax.swing.JComboBox GmoisObtenuI;
    private javax.swing.JComboBox GmoisObtenuM;
    private javax.swing.JComboBox GmoisObtenuSISU;
    private javax.swing.JComboBox GmoisObtenuTMS;
    private javax.swing.JComboBox GmoisValableA1;
    private javax.swing.JComboBox GmoisValableA2;
    private javax.swing.JComboBox GmoisValableA3;
    private javax.swing.JComboBox GmoisValableAMU;
    private javax.swing.JComboBox GmoisValableBDS;
    private javax.swing.JComboBox GmoisValableBEPS;
    private javax.swing.JComboBox GmoisValableI;
    private javax.swing.JComboBox GmoisValableM;
    private javax.swing.JComboBox GmoisValableSISU;
    private javax.swing.JComboBox GmoisValableTMS;
    private javax.swing.JTextField GnumA1;
    private javax.swing.JTextField GnumA2;
    private javax.swing.JTextField GnumA3;
    private javax.swing.JTextField GnumBadgeSISU;
    private javax.swing.JTextField GnumInamiM;
    private javax.swing.JTextField GnumSantePubliqueI;
    private javax.swing.JTextField GnumServiceAMU;
    private javax.swing.JTextField GnumeroBEPS;
    private javax.swing.JTextField GnumeroTMS;
    private javax.swing.JCheckBox GpermanentA1;
    private javax.swing.JCheckBox GpermanentA2;
    private javax.swing.JCheckBox GpermanentA3;
    private javax.swing.JCheckBox GpermanentAMU;
    private javax.swing.JCheckBox GpermanentBDS;
    private javax.swing.JCheckBox GpermanentBEPS;
    private javax.swing.JCheckBox GpermanentI;
    private javax.swing.JCheckBox GpermanentM;
    private javax.swing.JCheckBox GpermanentSISU;
    private javax.swing.JCheckBox GpermanentTMS;
    private javax.swing.JTextField GpreA1;
    private javax.swing.JTextField GpreA2;
    private javax.swing.JTextField GpreA3;
    private javax.swing.JLabel Gtitre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void ComboBoxAnnee() {
        String annéeToday = new SimpleDateFormat("yyyy").format(new Date());
        int année = Integer.parseInt(annéeToday);
        for(int i=année; i>=1920; i--){
            GanneeObtenuBEPS.addItem(i);
            GanneeValableBEPS.addItem(i);
            GanneeObtenuBDS.addItem(i);
            GanneeExamenBDS.addItem(i);
            GanneeValableBDS.addItem(i);
            GanneeObtenuTMS.addItem(i);
            GanneeValableTMS.addItem(i);
            GanneeObtenuI.addItem(i);
            GanneeValableI.addItem(i);
            GanneeObtenuAMU.addItem(i);
            GanneeValableAMU.addItem(i);
            GanneeObtenuSISU.addItem(i);
            GanneeValableSISU.addItem(i);
            GanneeObtenuM.addItem(i);
            GanneeValableM.addItem(i);
            GanneeObtenuA1.addItem(i);
            GanneeValableA1.addItem(i);
            GanneeObtenuA2.addItem(i);
            GanneeValableA2.addItem(i);
            GanneeObtenuA2.addItem(i);
            GanneeValableA2.addItem(i);
            GanneeObtenuA3.addItem(i);
            GanneeValableA3.addItem(i);
        }
    }

    private void completerChampFormation() {
        Formations formations = volontaire.getFormations();
        boolean a1 = false;
        boolean a2 = false;
        boolean a3 = false;
        boolean found = false;
        for(Formation formation : formations.getListeFormation()){
            found = false;
            if(GBEPS.getText().equals(formation.getNom())){
                completerChampBEPS(formation);
                found = true;
            }
            if(GBDS.getText().equals(formation.getNom())){
                completerChampsBDS(formation);
                found = true;
            }
            if(GTMS.getText().equals(formation.getNom())){
                completerChampsTMS(formation);
                found = true;
            }
            if(GI.getText().equals(formation.getNom())){
                completerChampsI(formation);
                found = true;
            }
            if(GAMU.getText().equals(formation.getNom())){
                completerChampsAMU(formation);
                found = true;
            }
            if(GSISU.getText().equals(formation.getNom())){
                completerChampsSISU(formation);
                found = true;
            }
            if(GM.getText().equals(formation.getNom())){
                completerChampsM(formation);
                found = true;
            }
            if(!found){
                if(!a1){
                    completerChampsA1(formation);
                    a1 = true;
                }else if(!a2){
                    completerChampsA2(formation);
                    a2 = true;
                }else if(!a3){
                    completerChampsA3(formation);
                    a3 = true;
                }
            }
        }
    }

    private boolean checkChamps() {
        return true;
    }

    private void creerClasse() {
        Formations formations = new Formations();
        if(GBEPS.isSelected()){
            addFormationBEPS(formations);
        }
        if(GBDS.isSelected()){
            addFormationBDS(formations);
        }
        if(GTMS.isSelected()){
            addFormationTMS(formations);
        }
        if(GI.isSelected()){
            addFormationI(formations);
        }
        if(GAMU.isSelected()){
            addFormationAMU(formations);
        }
        if(GSISU.isSelected()){
            addFormationSISU(formations);
        }
        if(GM.isSelected()){
            addFormationM(formations);
        }
        if(GA1.isSelected()){
            addFormationA1(formations);
        }
        if(GA2.isSelected()){
            addFormationA2(formations);
        }
        if(GA3.isSelected()){
            addFormationA3(formations);
        }
        if(volontaire == null){
            volontaire = new Volontaire();
        }
        volontaire.setFormations(formations);
        parent.setVolontaire(volontaire);
    }

    private void envoyerClasse() {
        PacketCom packet = null;
        if(!edited){
            packet = new PacketCom(States.NOUVEAU_VOLONTAIRE, (Object)volontaire);
        }else{
            packet = new PacketCom(States.EDIT_VOLONTAIRE, (Object)volontaire);
        }
        socket.send(packet);
        boolean cont = false;
        try {
            PacketCom packetReponse = socket.receive();
            String type = packetReponse.getType();
            if(type.equals(States.EDIT_VOLONTAIRE_OUI)){
                parent.afficherMessage("Modification du volontaire réussi.");
                cont = true;
            }else if(type.equals(States.NOUVEAU_VOLONTAIRE_OUI)){
                parent.afficherMessage("Ajout du  nouveau volontaire réussi.");
                cont = true;
            }else{
                String message = (String) packetReponse.getObjet();
                volontaire = parent.getVolontaire();
                parent.afficherMessage(message);
            }
        } catch (Exception ex) {
            Logger.getLogger(M_Adresse.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(cont){
            parent.cleanBackup();
            parent.changeState(Main.LOGGED);
        }
    }

    private String getFragment(String jour, String mois, String annee) {
        String fragment = null;
        if(mois.equals("-")){
            fragment = "yyyy#"+annee;
        }else{
            fragment = "mm/yyyy#"+mois+"/"+annee;
        }
        return fragment;
    }

    private void changerDate(String fragment, Date pdate, JComboBox Gjour, JComboBox Gmois, JComboBox Gannee) throws Exception{
        if(fragment != null){
            String[] split = fragment.split("#");
            String format = split[0];
            String date = split[1];
            if(format.equals("yyyy")){
                Gjour.setSelectedIndex(0);
                Gjour.setEnabled(false);
                Gmois.setSelectedIndex(0);

                boolean found = false;
                for(int i=0; i<Gannee.getItemCount() && !found; i++){
                    if(Gannee.getItemAt(i).toString().equals(date)){
                        Gannee.setSelectedIndex(i);
                        found = true;
                    }
                }
            }else{
                Date dateComplete = null;
                try {
                    dateComplete = new SimpleDateFormat("mm/yyyy").parse(date);
                } catch (ParseException ex) {
                    Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
                }
                String mois = new SimpleDateFormat("mm").format(dateComplete);
                String annee = new SimpleDateFormat("yyyy").format(dateComplete);
                Gjour.setSelectedIndex(0);
                Gjour.setEnabled(false);
                Gmois.setSelectedIndex(Integer.parseInt(mois));

                boolean found = false;
                for(int i=0; i<Gannee.getItemCount() && !found; i++){
                    if(Gannee.getItemAt(i).toString().equals(annee)){
                        Gannee.setSelectedIndex(i);
                        found = true;
                    }
                }
            }
        }else if(pdate != null){
            String jour = new SimpleDateFormat("dd").format(pdate);
            String mois = new SimpleDateFormat("MM").format(pdate);
            String annee = new SimpleDateFormat("yyyy").format(pdate);
            Gjour.setSelectedIndex(Integer.parseInt(jour));
            Gmois.setSelectedIndex(Integer.parseInt(mois));

            boolean found = false;
            for(int i=0; i<Gannee.getItemCount() && !found; i++){
                if(Gannee.getItemAt(i).toString().equals(annee)){
                    Gannee.setSelectedIndex(i);
                    found = true;
                }
            }
        }
    }

    private void addFormationBEPS(Formations formations) {
        Formation formation = new Formation();
        String nom = GBEPS.getText();
        String numero = GnumeroBEPS.getText();
        boolean permanent = GpermanentBEPS.isSelected();

        String jourObtenu = GjourObtenuBEPS.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuBEPS.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuBEPS.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourExpiration = GjourValableBEPS.getSelectedItem().toString();
        String moisExpiration = GmoisValableBEPS.getSelectedItem().toString();
        String anneeExpiration = GanneeValableBEPS.getSelectedItem().toString();
        String dateExpiration = jourExpiration + "/" + moisExpiration + "/" + anneeExpiration;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateExpiration, null)){
            String fragment = getFragment(jourExpiration, moisExpiration, anneeExpiration);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateExpiration));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        formation.setPermanent(permanent);

        formation.setNom(nom);
        formation.setNumero(numero);
        formations.addFormation(formation);
    }

    private void addFormationBDS(Formations formations) {
        Formation formation = new Formation();
        String nom = GBDS.getText();
        boolean permanent = GpermanentBDS.isSelected();
        String lieu = GlieuBDS.getText();

        String jourObtenu = GjourObtenuBDS.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuBDS.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuBDS.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourExamen = GjourExamenBDS.getSelectedItem().toString();
        String moisExamen = GmoisExamenBDS.getSelectedItem().toString();
        String anneeExamen = GanneeExamenBDS.getSelectedItem().toString();
        String dateExamen = jourExamen + "/" + moisExamen + "/" + anneeExamen;

        String jourValable = GjourValableBDS.getSelectedItem().toString();
        String moisValable = GmoisValableBDS.getSelectedItem().toString();
        String anneeValable = GanneeValableBDS.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(!EasyDate.isValidDate(dateExamen, null)){
            String fragment = getFragment(jourExamen, moisExamen, anneeExamen);
            formation.setFragmentDateExamen(fragment);
        }else{
            try {
                formation.setDateExamen(new SimpleDateFormat("dd/MM/yyyy").parse(dateExamen));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        formation.setPermanent(permanent);

        formation.setNom(nom);
        formation.setLieu(lieu);
        formations.addFormation(formation);
    }

    private void addFormationTMS(Formations formations) {
        Formation formation = new Formation();
        String nom = GTMS.getText();
        String numero = GnumeroTMS.getText();
        boolean permanent = GpermanentTMS.isSelected();

        String jourObtenu = GjourObtenuTMS.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuTMS.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuTMS.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableTMS.getSelectedItem().toString();
        String moisValable = GmoisValableTMS.getSelectedItem().toString();
        String anneeValable = GanneeValableTMS.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formation.setBlobPhotocopie(photocopieTMS);
        formations.addFormation(formation);
    }

    private void addFormationI(Formations formations) {
        Formation formation = new Formation();
        String nom = GI.getText();
        String numeroSante = GnumSantePubliqueI.getText();
        boolean permanent = GpermanentI.isSelected();

        String jourObtenu = GjourObtenuI.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuI.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuI.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableI.getSelectedItem().toString();
        String moisValable = GmoisValableI.getSelectedItem().toString();
        String anneeValable = GanneeValableI.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numeroSante);
        formation.setBlobPhotocopie(photocopieI);
        formations.addFormation(formation);
    }

    private void addFormationAMU(Formations formations) {
        Formation formation = new Formation();
        String nom = GAMU.getText();
        String numero = GbadgeNumAMU.getText();
        String numero112 = GnumServiceAMU.getText();
        boolean permanent = GpermanentAMU.isSelected();

        String jourObtenu = GjourObtenuAMU.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuAMU.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuAMU.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableAMU.getSelectedItem().toString();
        String moisValable = GmoisValableAMU.getSelectedItem().toString();
        String anneeValable = GanneeValableAMU.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formation.setNumeroService112(numero112);
        formation.setBlobPhotocopie(photocopieAMU);
        formations.addFormation(formation);
    }

    private void addFormationSISU(Formations formations) {
        Formation formation = new Formation();
        String nom = GSISU.getText();
        String numero = GnumBadgeSISU.getText();
        boolean permanent = GpermanentSISU.isSelected();

        String jourObtenu = GjourObtenuSISU.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuSISU.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuSISU.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableSISU.getSelectedItem().toString();
        String moisValable = GmoisValableSISU.getSelectedItem().toString();
        String anneeValable = GanneeValableSISU.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formation.setBlobPhotocopie(photocopieSISU);
        formations.addFormation(formation);
    }

    private void addFormationM(Formations formations) {
        Formation formation = new Formation();
        String nom = GM.getText();
        String numero = GnumInamiM.getText();
        boolean permanent = GpermanentM.isSelected();

        String jourObtenu = GjourObtenuM.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuM.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuM.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableM.getSelectedItem().toString();
        String moisValable = GmoisValableM.getSelectedItem().toString();
        String anneeValable = GanneeValableM.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formation.setBlobPhotocopie(photocopieM);
        formations.addFormation(formation);
    }

    private void addFormationA1(Formations formations) {
        Formation formation = new Formation();
        String nom = GpreA1.getText();
        String numero = GnumA1.getText();
        boolean permanent = GpermanentA1.isSelected();

        String jourObtenu = GjourObtenuA1.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuA1.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuA1.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableA1.getSelectedItem().toString();
        String moisValable = GmoisValableA1.getSelectedItem().toString();
        String anneeValable = GanneeValableA1.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formations.addFormation(formation);
    }

    private void addFormationA2(Formations formations) {
        Formation formation = new Formation();
        String nom = GpreA2.getText();
        String numero = GnumA2.getText();
        boolean permanent = GpermanentA2.isSelected();

        String jourObtenu = GjourObtenuA2.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuA2.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuA2.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableA2.getSelectedItem().toString();
        String moisValable = GmoisValableA2.getSelectedItem().toString();
        String anneeValable = GanneeValableA2.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formations.addFormation(formation);
    }

    private void addFormationA3(Formations formations) {
        Formation formation = new Formation();
        String nom = GpreA3.getText();
        String numero = GnumA3.getText();
        boolean permanent = GpermanentA3.isSelected();

        String jourObtenu = GjourObtenuA3.getSelectedItem().toString();
        String moisObtenu = GmoisObtenuA3.getSelectedItem().toString();
        String anneeObtenu = GanneeObtenuA3.getSelectedItem().toString();
        String dateObtenu = jourObtenu + "/" + moisObtenu + "/" + anneeObtenu;

        String jourValable = GjourValableA3.getSelectedItem().toString();
        String moisValable = GmoisValableA3.getSelectedItem().toString();
        String anneeValable = GanneeValableA3.getSelectedItem().toString();
        String dateValable = jourValable + "/" + moisValable + "/" + anneeValable;

        if(!EasyDate.isValidDate(dateObtenu, null)){
            String fragment = getFragment(jourObtenu, moisObtenu, anneeObtenu);
            formation.setFragmentDateObtention(fragment);
        }else{
            try {
                formation.setDateObtention(new SimpleDateFormat("dd/MM/yyyy").parse(dateObtenu));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(permanent){
            formation.setDatePeremption(null);
        }else if(!EasyDate.isValidDate(dateValable, null)){
            String fragment = getFragment(jourValable, moisValable, anneeValable);
            formation.setFragmentDateExpiration(fragment);
        }else{
            try {
                formation.setDatePeremption(new SimpleDateFormat("dd/MM/yyyy").parse(dateValable));
            } catch (ParseException ex) {
                Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        formation.setPermanent(permanent);
        formation.setNom(nom);
        formation.setNumero(numero);
        formations.addFormation(formation);
    }

    private void completerChampBEPS(Formation formation) {
        GBEPS.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String numeroBrevet = formation.getNumero();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        boolean permanent = formation.isPermanent();
        GpermanentBEPS.setSelected(permanent);
        if(permanent){
            GjourValableBEPS.setEnabled(false);
        }

        GnumeroBEPS.setText(numeroBrevet);
        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuBEPS, GmoisObtenuBEPS, GanneeObtenuBEPS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableBEPS, GmoisValableBEPS, GanneeValableBEPS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsBDS(Formation formation) {
        GBDS.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExamen = formation.getFragmentDateExamen();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String lieu = formation.getLieu();
        boolean permanent = formation.isPermanent();
        GpermanentBDS.setSelected(permanent);
        if(permanent){
            GjourValableBDS.setEnabled(false);
        }

        GlieuBDS.setText(lieu);
        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuBDS, GmoisObtenuBDS, GanneeObtenuBDS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            changerDate(fragmentExamen, formation.getDateExamen(), GjourExamenBDS, GmoisExamenBDS, GanneeExamenBDS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableBDS, GmoisValableBDS, GanneeValableBDS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsTMS(Formation formation) {
        GTMS.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numeroBrevet = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentTMS.setSelected(permanent);
        GnumeroTMS.setText(numeroBrevet);
        photocopieTMS = formation.getBlobPhotocopie();
        if(permanent){
            GjourValableTMS.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuTMS, GmoisObtenuTMS, GanneeObtenuTMS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableTMS, GmoisValableTMS, GanneeValableTMS);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsI(Formation formation) {
        GI.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numeroSante = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentI.setSelected(permanent);
        GnumSantePubliqueI.setText(numeroSante);
        photocopieI = formation.getBlobPhotocopie();
        if(permanent){
            GjourValableI.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuI, GmoisObtenuI, GanneeObtenuI);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableI, GmoisValableI, GanneeValableI);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsAMU(Formation formation) {
        GAMU.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        String numero112 = formation.getNumeroService112();
        boolean permanent = formation.isPermanent();

        GpermanentAMU.setSelected(permanent);
        GbadgeNumAMU.setText(numero);
        GnumServiceAMU.setText(numero112);
        photocopieAMU = formation.getBlobPhotocopie();
        if(permanent){
            GjourValableAMU.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuAMU, GmoisObtenuAMU, GanneeObtenuAMU);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableAMU, GmoisValableAMU, GanneeValableAMU);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsSISU(Formation formation) {
        GSISU.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentSISU.setSelected(permanent);
        GnumBadgeSISU.setText(numero);
        photocopieSISU = formation.getBlobPhotocopie();
        if(permanent){
            GjourValableSISU.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuSISU, GmoisObtenuSISU, GanneeObtenuSISU);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableSISU, GmoisValableSISU, GanneeValableSISU);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsM(Formation formation) {
        GM.setSelected(true);
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentM.setSelected(permanent);
        GnumInamiM.setText(numero);
        photocopieM = formation.getBlobPhotocopie();
        if(permanent){
            GjourValableM.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuM, GmoisObtenuM, GanneeObtenuM);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableM, GmoisValableM, GanneeValableM);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsA1(Formation formation) {
        GA1.setSelected(true);
        GpreA1.setText(formation.getNom());
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentA1.setSelected(permanent);
        GnumA1.setText(numero);
        if(permanent){
            GjourValableA1.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuA1, GmoisObtenuA1, GanneeObtenuA1);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableA1, GmoisValableA1, GanneeValableA1);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsA2(Formation formation) {
        GA2.setSelected(true);
        GpreA2.setText(formation.getNom());
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentA2.setSelected(permanent);
        GnumA2.setText(numero);
        if(permanent){
            GjourValableA2.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuA2, GmoisObtenuA2, GanneeObtenuA2);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableA2, GmoisValableA2, GanneeValableA2);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void completerChampsA3(Formation formation) {
        GA3.setSelected(true);
        GpreA3.setText(formation.getNom());
        String fragmentObtenu = formation.getFragmentDateObtention();
        String fragmentExpiration = formation.getFragmentDateExpiration();
        String numero = formation.getNumero();
        boolean permanent = formation.isPermanent();

        GpermanentA3.setSelected(permanent);
        GnumA3.setText(numero);
        if(permanent){
            GjourValableA3.setEnabled(false);
        }

        try {
            changerDate(fragmentObtenu, formation.getDateObtention(), GjourObtenuA3, GmoisObtenuA3, GanneeObtenuA3);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            changerDate(fragmentExpiration, formation.getDatePeremption(), GjourValableA3, GmoisValableA3, GanneeValableA3);
        } catch (Exception ex) {
            Logger.getLogger(M_Formations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkFormat(File photocopieI) {
        String extension = "";
        String name = photocopieI.getName();
        int i = name.lastIndexOf('.');
        if (i > 0) {
            extension = name.substring(i+1);
        }
        if(extension.equals("jpg") || extension.equals("jpeg") || extension.equals("png") || extension.equals("bmp")){
            return true;
        }else{
            return false;
        }
    }

    public byte[] FileToByte(File fichier){
        if(fichier == null){
            return null;
        }
        int length = (int) fichier.length();
        byte[] data = new byte[length];
        try {
            BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fichier));
            bis.read(data, 0, length);
            return data;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Apercu_Photocopie.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Apercu_Photocopie.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
}
